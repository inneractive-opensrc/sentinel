akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
  log-config-on-start = off
  loglevel = "INFO"

  actor {
    debug {
      # enable DEBUG logging of unhandled messages
      unhandled = on
      autoreceive = on
      lifecycle = on
      unhandled = on
    }

    deployment {
      /TopNPublisherActor/AnomalyDetector {
        router = round-robin-pool
        nr-of-instances = 10
      }
    }
  }
}

sentinel {
  timeseries.provider = "com.inneractive.sentinel.timeseries.DummyTimeSeries"
  scheduler.interval = "PT30S"


  detector {
    anomaly.message = "Anomaly detected for series #fileName# value : #value#"
    logger.provider = "com.inneractive.sentinel.logger.LogAnomalyLogger"
  }
}